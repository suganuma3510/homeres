// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/shop.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	model "github.com/suganuma3510/homeres/domain/model"
	url "net/url"
	reflect "reflect"
)

// MockShopService is a mock of ShopService interface
type MockShopService struct {
	ctrl     *gomock.Controller
	recorder *MockShopServiceMockRecorder
}

// MockShopServiceMockRecorder is the mock recorder for MockShopService
type MockShopServiceMockRecorder struct {
	mock *MockShopService
}

// NewMockShopService creates a new mock instance
func NewMockShopService(ctrl *gomock.Controller) *MockShopService {
	mock := &MockShopService{ctrl: ctrl}
	mock.recorder = &MockShopServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockShopService) EXPECT() *MockShopServiceMockRecorder {
	return m.recorder
}

// GetShopList mocks base method
func (m *MockShopService) GetShopList(arg0 context.Context, arg1 url.Values) (*model.Shop, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShopList", arg0, arg1)
	ret0, _ := ret[0].(*model.Shop)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShopList indicates an expected call of GetShopList
func (mr *MockShopServiceMockRecorder) GetShopList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShopList", reflect.TypeOf((*MockShopService)(nil).GetShopList), arg0, arg1)
}
